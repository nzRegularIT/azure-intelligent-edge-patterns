{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "apiProfile": "2018-03-01-hybrid",
    "parameters": {
        "_artifactsLocation": {
            "defaultValue": "https://sqlstorageimage2.blob.westus2.stackpoc.com/sqltemplates",
            "type": "string",
            "metadata": {
                "description": "Artifacts base url"
            }
        },
        "sqlvmname": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Name of the Sql DR VM."
            }
        },
        "adminUsername": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "string",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Arbitrary name for the Azure Subnet"
            }
        },
        "dnsNameForPublicIP": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "domaintoJoin": {
            "type": "string",
            "metadata": {
                "description": "The FQDN of the AD domain"
            }
        },
        "domainUsername": {
            "type": "string",
            "metadata": {
                "description": "Username of the account on the domain"
            }
        },
        "domainPassword": {
            "type": "string",
            "metadata": {
                "description": "Password of the account on the domain"
            }
        },
        "ouPath": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: \"OU=testOU; DC=domain; DC=Domain; DC=com\""
            }
        },
        "sqlAOEPName": {
            "type": "string"
        },
        "sqlServerServiceAccountUserName": {
            "defaultValue": "sqlservice",
            "type": "string",
            "metadata": {
                "description": "The SQL Server Service Account name"
            }
        },
        "sqlServerServiceAccountPassword": {
            "type": "string",
            "metadata": {
                "description": "The SQL Server Service Account password"
            }
        },
        "domainJoinOptions": {
            "defaultValue": 3,
            "type": "int",
            "metadata": {
                "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
            }
        },
        "numberOfDisks": {
            "type": "int",
            "defaultValue": 2
        },
        "workloadType": {
            "defaultValue": "General",
            "type": "string"
        },
        "sqlStorageAccountType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of the Sql Server Storage Account created"
            }
        },
        "publicIPAddressName": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Arbitrary name for the Azure Virtual Network"
            }
        },
        "sqlVMSize": {
            "defaultValue": "Standard_DS2_v2",
            "allowedValues": [
                "Standard_DS1",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS4",
                "Standard_GS5"
            ],
            "type": "string",
            "metadata": {
                "description": "The size of the SQL VMs Created"
            }
        },
        "vmDiskSize": {
            "type": "string",
            "allowedValues": [
                "128",
                "256",
                "512",
                "1023"
            ],
            "metadata": {
                "description": "The size of the SQL VM data disks in GB."
            },
            "defaultValue": "128"
        }
    },
	"variables": {
		"newStorageAccountName": "[concat(uniquestring(resourceGroup().id),'storage')]",
		"publicIPAddressName": "myPublicIP",
		"publicIPAddressType": "Dynamic",
		"location": "[resourceGroup().location]",
		"dnssuffix": "[substring(uniqueString(resourceGroup().id),3,6)]",
		"subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
		"sqlConnectivityType": "Public",
		"sqlPortNumber": "1433",
		"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
		"sqlAOPrepareModulesURL": "[concat(parameters('_artifactsLocation'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
		"sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
		"vmContainerName": "vhds",
		"lbSettings": {
			"rdpLBFE": "rdpLBFE",
			"sqlLBFE": "sqlLBFE",
			"adLBBE": "adLBBE",
			"sqlLBBE": "sqlLBBE",
			"rdpLBName": "rdpLoadBalancer",
			"sqlLBName": "sqlLoadBalancer"
		},
		"SQLAOProbe": "SQLAlwaysOnEndPointProbe",
		"LBIPAddressName": "lbpublicip",
		"ids": {
			"rdplbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName)]",
			"sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName)]",
			"publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('lbIPAddressName'))]"
		},
		"derivedIds": {
			"rdplbFEConfigID": "[concat(variables('ids').rdplbID,'/frontendIPConfigurations/',variables('lbSettings').rdpLBFE)]",
			"adBEAddressPoolID": "[concat(variables('ids').rdplbID,'/backendAddressPools/',variables('lbSettings').adLBBE)]",
			"sqlBEAddressPoolID": "[concat(variables('ids').sqllbID,'/backendAddressPools/',variables('lbSettings').sqlLBBE)]",
			"sqllbFEConfigID": "[concat(variables('ids').sqllbID,'/frontendIPConfigurations/',variables('lbSettings').sqlLBFE)]",
			"sqllbProbeID": "[concat(variables('ids').sqllbID,'/probes/',variables('SQLAOProbe'))]"
		}
	},
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[toLower(variables('newStorageAccountName'))]",
            "location": "[variables('location')]",
            "properties": {
                "accountType": "[parameters('sqlStorageAccountType')]"
            }
        },
			{
				"type": "Microsoft.Network/publicIPAddresses",
				"name": "[variables('LBIPAddressName')]",
				"apiVersion": "2015-05-01-preview",
				"location": "[variables('location')]",
				"properties": {
					"publicIPAllocationMethod": "Static",
					"dnsSettings": {
						"domainNameLabel": "[concat(parameters('dnsNameForPublicIP'),'-',variables('dnssuffix'))]"
					}
				}
			},
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
							"dnsSettings": {
								"domainNameLabel": "[concat(parameters('sqlvmname'),'-',variables('dnssuffix'))]"
							}
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('lbSettings').sqlLBName]",
            "apiVersion": "2015-06-15",
            "location": "[resourcegroup().location]",
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbsettings').sqlLBFE]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('lbIPAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('lbSettings').sqlLBBE]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "SQLAlwaysOnEndPointListener",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('derivedIds').sqlBEAddressPoolID]"
                            },
                            "frontendIPConfiguration": {
                                "id": "[variables('derivedIds').sqllbFEConfigID]"
                            },
                            "probe": {
                                "id": "[variables('derivedIds').sqllbProbeID]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 1433,
                            "backendPort": 1433,
                            "enableFloatingIP": true
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('SQLAOProbe')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 59999,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('lbIPAddressName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkinterfaces",
            "name": "[concat(parameters('SqlVmName'), '-nic')]",
            "location": "[variables('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('derivedIds').sqlBEAddressPoolID]"
                                }
                            ]
                        }
                    }
                ]
            },
					"dependsOn": [
						"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
						"[concat('Microsoft.Network/loadBalancers/', variables('lbsettings').sqlLBName)]"
					]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('SqlVmName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('SqlVmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('sqlVMSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftSQLServer",
                        "offer": "SQL2016SP2-WS2016",
                        "sku": "Enterprise",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "vhd": {
                            "uri": "[concat(concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('newStorageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), parameters('SqlVmName'), '.vhd')]"
                        },
                        "name": "[parameters('SqlVmName')]"
                    },
                    "copy": [
                        {
                            "name": "dataDisks",
                            "count": "[parameters('numberOfDisks')]",
                            "input": {
                                "vhd": {
                                    "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmContainerName'),'/', parameters('sqlVMName'),'-Data-', copyIndex('dataDisks'),'.vhd')]"
                                },
                                "name": "[concat(parameters('sqlVMName'),'-data-disk', copyIndex('dataDisks'))]",
                                "caching": "ReadOnly",
                                "createOption": "empty",
                                "diskSizeGB": "[parameters('vmDiskSize')]",
                                "lun": "[copyIndex('dataDisks')]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkinterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkinterfaces', concat(parameters('SqlVmName'), '-nic'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkinterfaces/', parameters('SqlVmName'), '-nic')]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('SqlVmName'), '/SqlIaasExtension')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "SQLIaaSExtension"
            },
            "properties": {
                "type": "SqlIaaSAgent",
                "publisher": "Microsoft.SqlServer.Management",
                "typeHandlerVersion": "1.2",
                "autoUpgradeMinorVersion": false,
                "settings": {
                    "AutoTelemetrySettings": {
                        "Region": "[resourceGroup().location]"
                    },
                    "AutoPatchingSettings": {
                        "PatchCategory": "WindowsMandatoryUpdates",
                        "Enable": false
                    },
                    "KeyVaultCredentialSettings": {
                        "Enable": false,
                        "CredentialName": ""
                    },
                    "ServerConfigurationsManagementSettings": {
                        "SQLConnectivityUpdateSettings": {
                            "ConnectivityType": "[variables('sqlConnectivityType')]",
                            "Port": "[variables('sqlPortNumber')]"
                        },
                        "AdditionalFeaturesServerConfigurations": {
                            "IsRServicesEnabled": false
                        }
                    }
                },
                "protectedSettings": {
                    "SQLAuthUpdateUserName": "[parameters('adminUsername')]",
                    "SQLAuthUpdatePassword": "[parameters('adminPassword')]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('SqlVmName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('SqlVmName'),'/joindomain')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Name": "[parameters('domaintoJoin')]",
                    "OUPath": "[parameters('ouPath')]",
                    "User": "[concat(parameters('domaintoJoin'), '\\', parameters('domainUsername'))]",
                    "Restart": "true",
                    "Options": "[parameters('domainJoinOptions')]"
                },
                "protectedSettings": {
                    "Password": "[parameters('domainPassword')]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',parameters('SqlVmName'),'/extensions/SqlIaasExtension')]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('SqlVmName'),'/sqlAOPrepare')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.76",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesURL": "[variables('sqlAOPrepareModulesURL')]",
                    "configurationFunction": "[variables('sqlAOPrepareConfigurationFunction')]",
                    "properties": {
                        "domainName": "[parameters('domaintoJoin')]",
                        "sqlAlwaysOnEndpointName": "[parameters('sqlAOEPName')]",
                        "adminCreds": {
                            "userName": "[parameters('adminUserName')]",
                            "password": "privateSettingsRef:AdminPassword"
                        },
                        "sqlServiceCreds": {
                            "userName": "[parameters('sqlServerServiceAccountUserName')]",
                            "password": "privateSettingsRef:SqlServerServiceAccountPassword"
                        },
                        "NumberOfDisks": "[parameters('numberOfDisks')]",
                        "WorkloadType": "[parameters('workloadType')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',parameters('SqlVmName'),'/extensions/SqlIaasExtension')]",
                "[concat('Microsoft.Compute/virtualMachines/',parameters('SqlVmName'),'/extensions/joindomain')]"
            ]
        }
    ],
    "outputs": {
        "sqlvmname": {
            "type": "string",
            "value": "[parameters('sqlvmname')]"
        },
        "drlbipName": {
            "type": "string",
            "value": "[variables('LBIPAddressName')]"
        }
    }
}
